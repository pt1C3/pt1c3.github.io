.project-page {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.project-page>* {
    padding: 5rem 4vw;
}

.nav.project-nav {
    justify-content: space-between;

}

.projects-nav {
    display: flex;
    flex-direction: row;
    gap: 1rem;
}

.nav .left a:last-child,
.projects-nav a {
    display: flex;
    flex-direction: row;
    gap: .8rem;
    align-items: center;
    justify-content: space-between;
    text-decoration: none;
    font-weight: 500;
    transition: transform .3s;

}

.projects-nav a:first-child:hover {
    transform: skewY(4deg) rotateY(24deg);

}
.projects-nav a:nth-child(2):hover {
    transform: scale(1.4);

}
.projects-nav a:last-child:hover {
    transform: skewY(-4deg) rotateY(-24deg);

}

.projects-nav a:first-child img {
    transform: scaleX(-1);
}

.left a:last-child img,
.projects-nav img {
    height: clamp(2rem, 3svh, 8rem);
}

.project-page>*:first-child {
    padding-top: 8rem;
    display: grid;
    gap: 2.4rem;
    grid-template-columns: 1fr 3fr;
}



.project-page>*:first-child>* {
    height: 100%;
    width: 100%;

}



.project-page>*:first-child .branding-description {
    display: flex;
    align-items: center;
}

@media (max-width: 768px) {

    .project-page>*,
    .project-page>.tools>.tools-grid {
        grid-template-columns: 1fr !important;
    }

    .project-page>*:first-child .branding-description {
        text-align: center;
    }
}

.project-page>.branding {
    display: flex;
    flex-direction: row;
    width: 100%;
    height: 100svh;
    justify-content: center;
    position: relative;
}

.project-page>.branding .left,
.project-page>.branding .right {
    position: absolute;
    height: 100%;
    border: none;
    width: 24%;
    padding: 2rem;
    transition: .24s;
}

.project-page>.branding .left {
    left: 0;
    top: 0;
    text-align: right;
    transform: translateX(-100%);

    background: radial-gradient(circle farthest-side at right center, rgb(from var(--black-color) r g b / .36) 0%, transparent 36%);
}

.project-page>.branding .right {
    right: 0;
    top: 0;
    text-align: left;
    transform: translateX(100%);
    background: radial-gradient(circle farthest-side at left center, rgb(from var(--black-color) r g b / .36) 0%, transparent 36%);

}


.project-page>.branding .left>img {
    transform: rotateY(180deg);
}

.project-page>.branding .left>img,
.project-page>.branding .right>img {
    width: 36%;
    opacity: .48;
    transition: .24s;
}

.project-page>.branding .left:hover {
    background: radial-gradient(circle farthest-side at right center, rgb(from var(--accent-color) r g b / .48) 0%, transparent 48%);

}

.project-page>.branding .right:hover {
    background: radial-gradient(circle farthest-side at left center, rgb(from var(--accent-color) r g b / .48) 0%, transparent 48%);
}


.project-page>.branding .left:hover>img,
.project-page>.branding .right:hover>img {
    opacity: 1;
    width: 64%;
}

@media (max-width: 868px) {

    .project-page>.branding .left,
    .project-page>.branding .right {
        padding: 1rem;
        width: 24%;
    }

    .project-page>.branding .left>img,
    .project-page>.branding .right>img {
        width: 4vw;
        opacity: .48;
    }


    .project-page>.branding .left:hover {
        background: radial-gradient(circle farthest-side at right center, rgb(from var(--accent-color) r g b / .48) 0%, transparent 64%);

    }


    .project-page>.branding .right:hover {
        background: radial-gradient(circle farthest-side at left center, rgb(from var(--accent-color) r g b / .48) 0%, transparent 64%);
    }

    .project-page>.branding .left:hover>img,
    .project-page>.branding .right:hover>img {
        width: 6vw;
    }
}

.project-page>.branding .branding-image {
    height: 100%;
    object-fit: contain;

}

@media (max-width: 868px) {
    .project-page>.branding {
        height: fit-content;
    }

    .project-page>.branding .branding-image {
        height: auto;
        object-fit: contain;
        width: 64vw;
    }
}

.project-page>.branding .branding-indicators {
    position: absolute;
    bottom: 5%;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    justify-content: center;
    gap: 0.64rem;
    margin-top: 1rem;
}

@media (max-width: 868px) {
    .project-page>.branding .branding-indicators {
        bottom: 10%;

    }
}

.project-page>.branding .branding-indicators .indicator {
    transform: rotate(45deg);
    width: .36rem;
    height: .36rem;
    background-color: var(--accent-color);
    opacity: 0.5;
    transition: opacity 0.3s;
}

.project-page>.branding .branding-indicators .indicator.active {
    opacity: 1;
}

.project-page>.other img {
    object-fit: contain;
    height: 80svh;
    border: .16rem solid var(--accent-color);

}

@media (max-width: 768px) {
    .project-page>.other img {
        height: auto;
        width: 80vw
    }
}

.project-page .interface-description {
    border-top: .24rem var(--accent-color-50) double;
    width: 80%;


}

.project-page .mobile {
    margin: 5rem 0;
    padding: 0 12vw;
    display: grid;
    gap: 2.4rem;
    grid-template: 100% / 1fr 8fr;
    height: 80svh;
    text-align: center;

}


.project-page .desktop {
    display: flex;
    align-items: Center;
}

.project-page .mobile .image-container img {
    border-radius: .8rem;
    border: .16rem solid var(--accent-color);
    height: 100%;
    object-fit: contain;
}

.project-page .desktop img {
    border-radius: .8rem;
    border: .16rem solid var(--accent-color);
}

.project-page>.desktop {
    display: grid;
    gap: 2.4rem;
    grid-template-columns: 4fr 6fr;
}

.project-page>.desktop>* {
    width: 100%;
}

.project-page>.desktop .item-description,
.project-page>.mobile .item-description {
    display: flex;
    justify-content: center;
    flex-direction: column;
    height: 100%;
    text-align: left;
}

.project-page>.desktop .item-description>*:first-child,
.project-page>.mobile .item-description>*:first-child {
    margin-bottom: .4rem;

}

@media (max-width: 768px) {

    .project-page .mobile {
        height: 100svh;
        grid-template: 64% 1fr / 1fr;
        padding: 0 2vw;
        gap: 0rem;

    }

    .project-page>.desktop .item-description,
    .project-page>.mobile .item-description {
        text-align: center;
    }
}

.project-page .tools {
    border-top: .24rem var(--accent-color-50) double;
    padding: 5rem 12vw;
    width: 80%;
}

.project-page .tools h2 {
    text-align: center;
    margin-bottom: 1.20rem;
}

.project-page .tools-grid {
    display: grid;
    gap: 2.4rem;
}

.project-page .tools-grid>* {
    display: flex;
    align-items: center;
    text-align: left;
    justify-content: center;
    gap: 1.6rem;
    padding: .8rem;
    position: relative;
}

.project-page .tools-grid .tool-name {
    font-weight: 600;
    transition: .3s;

}

.project-page .tools-grid a.tool-name:hover {
    font-weight: 900;

}

.project-page .tools-grid>*>* {
    width: 50%;
}

.project-page .tools-grid>*>*:first-child {
    text-align: right;
}

.project-page .tools-grid img {
    height: 5rem;
}

.project-page .tools-grid .comment {
    padding: .4rem;
    background-color: var(--accent-color);
    width: fit-content;
    position: absolute;
    bottom: 0;
    right: 0;
    perspective: 1000px;
    display: block;
    transform-style: preserve-3d;
    white-space: nowrap;
    transform: translate(32%, 12%) rotateX(12deg) skew(-2deg) rotateY(-24deg);
    transition: .3s;
}

.project-page .tools-grid .comment:hover {
    transform: translate(32%, 12%) rotateX(12deg) skew(-4deg) rotateY(-36deg);
}



/**
 * Define a custom property for the background angle.
 */
@property --bg-angle {
    inherits: false;
    initial-value: 0deg;
    syntax: "<angle>";
}

/**
 * Keyframes for spinning the gradient.
 */
@keyframes spin {
    to {
        --bg-angle: 360deg;
    }
}

.project-page>.branding .branding-image,
.project-page .mobile .image-container img,
.project-page .desktop img,
.project-page>.other img {
    border-radius: .8rem;
    border: .16rem solid transparent;
    position: relative;
    background:
        linear-gradient(to bottom, transparent, transparent) padding-box,
        conic-gradient(from var(--bg-angle), var(--third-color) 0%, var(--accent-color) 24%, var(--accent-color) 80%, var(--secondary-color) 100%) border-box;
    animation: spin 10s infinite linear;
}